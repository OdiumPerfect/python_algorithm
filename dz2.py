# 1. Написать программу, которая будет складывать, вычитать, умножать или делить два числа.
# Числа и знак операции вводятся пользователем.
# После выполнения вычисления программа не должна завершаться, а должна запрашивать новые данные для вычислений.
# Завершение программы должно выполняться при вводе символа '0' в качестве знака операции.
# Если пользователь вводит неверный знак (не '0', '+', '-', '*', '/'),
# то программа должна сообщать ему об ошибке и снова запрашивать знак операции.
# Также сообщать пользователю о невозможности деления на ноль, если он ввел 0 в качестве делителя.


# while True:
#     first_num = int(input('Введите первое число '))
#     second_num = int(input('Введите второе число '))
#     sign = input('Введите +, -, *, / или  0 для выхода из программы ')
#     if sign == '+':
#         print(first_num + second_num)
#     elif sign == '-':
#         print(first_num - second_num)
#     elif sign == '*':
#         print(first_num * second_num)
#     elif sign == '/':
#         if second_num == 0:
#             print('Нельзя делить на 0')
#         else:
#             print(first_num / second_num)
#     elif sign == '0':
#         break
#     else:
#         print('Возникла ошибка, проверьте введенные данные')

# 2. Посчитать четные и нечетные цифры введенного натурального числа.
# Например, если введено число 34560, то у него 3 четные цифры (4, 6 и 0) и 2 нечетные (3 и 5).

# even = 0
# odd = 0
# value = input('Введите число: ')
# for i in value:
#     if i.isdigit():
#         if int(i) % 2 == 0:
#             even += 1
#         elif int(i) % 2 != 0:
#             odd += 1
#     else:
#         print('Введено некорректное значение, введите число')
# if even != 0 or odd != 0:
#     print(f'В вашем числе {even} четных и {odd} нечетных чисел')


# 3. Сформировать из введенного числа обратное по порядку входящих в него цифр и вывести на экран.
# Например, если введено число 3486, то надо вывести число 6843.

# num = input('Введите число: ')
# if num.isdigit():
#     print(num[::-1])
# else:
#     print('Вы ввели не число')

# 4. Найти сумму n элементов следующего ряда чисел: 1 -0.5 0.25 -0.125
# ...Количество элементов (n) вводится с клавиатуры.

# n = input('Введите количество элементов: ')
# item = 1
# summ = 1
# if n.isdigit():
#     n = int(n)
#     if n > 0:
#         while n > 0:
#             item /= -2
#             summ += item
#             n -= 1
#     else:
#         'Введите число больше 1'
# else:
#     'Введите число больше 1'
#
# print(summ)


# 5. Вывести на экран коды и символы таблицы ASCII,
# начиная с символа под номером 32 и заканчивая 127-м включительно.
# Вывод выполнить в табличной форме: по десять пар "код-символ" в каждой строке.

# start = 32
# finish = 127
# result = ''
# i = 0
# symbol = start
# while symbol <= finish:
#     result = result + chr(symbol) + ' - ' + str(symbol) + ' - '
#     if (i + 1) % 10 == 0:
#         result = result + '\n'
#     i += 1
#     symbol += 1
#
# for i, item in enumerate(range(start, finish + 1)):
#     if i % 10 == 0:
#         print()
#     print(f'{chr(item)}--{str(item)}', end='\t')
# print()
# print(result)

# 6. В программе генерируется случайное целое число от 0 до 100.
# Пользователь должен его отгадать не более чем за 10 попыток.
# После каждой неудачной попытки должно сообщаться больше или меньше введенное пользователем число,
# чем то, что загадано. Если за 10 попыток число не отгадано, то вывести загаданное число.

# import random
#
# num = random.randint(0, 100)
# attempts = 10
#
#
# while attempts != 0:
#     user_num = int(input('Угадайте загаданное число от 0 до 100: '))
#     if user_num < num:
#         print('Ваше число меньше')
#         attempts -= 1
#     elif user_num > num:
#         print('Ваше число больше')
#         attempts -= 1
#     elif user_num == num:
#         print('Число угадано')
#         break
# else:
#     print(f'У вас закончились попытки, это было число {num}')

# 7. Напишите программу, доказывающую или проверяющую, что для множества натуральных чисел выполняется равенство:
# 1+2+...+n = n(n+1)/2, где n - любое натуральное число.

# n = int(input('Введите натуральное число: '))
# n_summ = 0
# n_equation = n*(n+1)/2
#
# while n > 0:
#     n_summ += n
#     n -= 1
#
# if n_equation == n_summ:
#     print('Равенство доказано')
# else:
#     print('Равенство опровергнуто')

# 8. Посчитать, сколько раз встречается определенная цифра в введенной последовательности чисел.
# Количество вводимых чисел и цифра, которую необходимо посчитать, задаются вводом с клавиатуры.

# num = input('Введите полседовательность: ')
# need_num = input('Введите число, число вхождений которого необходимо найти: ')
#
# print(num.count(need_num))

# 9. Среди натуральных чисел, которые были введены, найти наибольшее по сумме цифр.
# Вывести на экран это число и сумму его цифр.

# a = input('введите числа')
# b = a.split(' ')
# sum_max = 0
# for item in b[0]:
#     sum_max += int(item)
# result = b[0]
# sum_cor = 0
#
# for item in b:
#     sum_cor = 0
#     for item2 in str(item):
#         sum_cor += int(item2)
#     if sum_cor > sum_max:
#         sum_max = sum_cor
#         result = item
# print(f'Максимальная сумма чисел {sum_max} у числа {result}')